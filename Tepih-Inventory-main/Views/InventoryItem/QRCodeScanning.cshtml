@using Inventar.ViewModels.Inventory
@model IEnumerable<ScannedProductViewModel>
@{
    ViewData["Title"] = "Scan QR Code";
}
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
</head>

<h2>@Inventar.Resources.Resource.ScanQRCode</h2>
@if (TempData["ProductNotFound"] != null)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        @TempData["ProductNotFound"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div id="qr-reader" style="width:500px;"></div>
<div id="result"></div>
<form id="myForm" asp-action="ManuallyAddProduct" method="post" style="margin-top:1rem; margin-bottom:1rem">
    <input type="number" id="manualId" name="id" style="vertical-align:middle" />
    <button type="submit" style="vertical-align:middle">@Inventar.Resources.Resource.ManuallyEnterId</button>
</form>
<button id="clearSessionBtn" class="btn btn-sm btn-danger">@Inventar.Resources.Resource.ClearCart</button>
@if(Model != null)
{
    <table id="productTable" class="table table-hover table-striped">
        <thead>
            <tr>
                <th scope="col">ID</th>
                <th scope="col">@Inventar.Resources.Resource.ProductNumber</th>
                <th scope="col">@Inventar.Resources.Resource.Name</th>
                <th scope="col">Model</th>
                <th scope="col">@Inventar.Resources.Resource.Size</th>
                <th scope="col">m²</th>
                <th scope="col">@Inventar.Resources.Resource.M2Total</th>
                <th scope="col">@Inventar.Resources.Resource.Color</th>
                @if (User.Identity.IsAuthenticated && (User.IsInRole("admin") || User.IsInRole("superadmin")))
                {
                    <th scope="col">@Inventar.Resources.Resource.Price</th>
                }
                else
                {
                    <th style="display:none" scope="col">@Inventar.Resources.Resource.Price</th>
                }
                <th scope="col">@Inventar.Resources.Resource.Quantity</th>
                <th scope="col"></th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr style="vertical-align:middle" data-id="@item.Id">
                    <th scope="row">
                        @item.Id
                    </th>
                    <td>
                        @item.ProductNumber
                    </td>
                    <td>
                        @item.Name
                    </td>
                    <td>
                        @item.Model
                    </td>
                    @if (item.PerM2 || (!item.PerM2 && (item.Width != null && item.Length != null)))
                    {
                        <td style="white-space: nowrap">
                            @($"{item.Width}X{item.Length}")
                        </td>
                    }
                    @if (!item.PerM2 && (item.Width == null || item.Length == null))
                    {
                        <td style="white-space: nowrap"></td>
                    }
                    <td class="perUnit">
                        @(item.PerM2 ? Math.Round((decimal)item.M2PerUnit, 2) : "")
                    </td>
                    <td id="m2Total-@item.Id" class="total">
                        @(item.PerM2 ? Math.Round((decimal)item.M2Total,2) : "")
                    </td>
                    <td>
                        @item.Color
                    </td>
                    @if (User.Identity.IsAuthenticated && (User.IsInRole("admin") || User.IsInRole("superadmin")))
                    {
                        <td>
                            @item.Price €
                        </td>
                    }
                    else
                    {
                        <td style="display:none">
                            @item.Price €
                        </td>
                    }
                    <td id="quantity-@item.Id">
                       @item.Quantity
                    </td>
                    <td>
                        <button class="btn btn-primary btn-sm update-quantity" data-id="@item.Id" data-action="decrease">-</button>
                        <button class="btn btn-primary btn-sm update-quantity" data-id="@item.Id" data-action="increase">+</button>
                    </td>
                    <td>
                        <form asp-action="DeleteScannedProduct" method="post">
                            <input type="hidden" name="id" value="@item.Id" />
                            <button type="submit" class="btn btn-danger">
                                <i class="fas fa-trash"></i>
                            </button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <a class="btn btn-secondary @(Model.Any() ? "" : "disabled-link")" href="/InventoryItem/ScannedProductsToBePurchased">@Inventar.Resources.Resource.Complete</a>

}
//NE BRISATI
@* <script src="https://unpkg.com/html5-qrcode" type="text/javascript"></script>
 *@<script src="https://unpkg.com/html5-qrcode@2.3.8/html5-qrcode.min.js"></script>
<script>
    function onScanSuccess(qrCodeMessage) {
        fetch(`/InventoryItem/ProcessQRCode?data=${qrCodeMessage}`)
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    window.location.href = `/InventoryItem/QRCodeScanning`;
                } else {
                    document.getElementById('result').innerHTML = `
                        <div class="alert alert-warning alert-dismissible fade show" role="alert">
                            ${result.message}
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>`;
                }
            })
            .catch(error => {
                console.error('Fetch error:', error);
                document.getElementById('result').innerHTML = `
                    <div class="alert alert-danger">Error processing QR code.</div>`;
            });
    }

    function onScanError(errorMessage) {
        console.warn(`QR Code scan error: ${errorMessage}`);
    }

    // Delay scanner initialization after page load
    window.addEventListener("load", function () {
        setTimeout(() => {
            const html5QrcodeScanner = new Html5QrcodeScanner("qr-reader", { fps: 10, qrbox: 250 });
            html5QrcodeScanner.render(onScanSuccess, onScanError);
        }, 1500); // Delay by 3 seconds (adjust as needed)
    });

    // var html5QrcodeScanner = new Html5QrcodeScanner("qr-reader", { fps: 10, qrbox: 250 });
    // html5QrcodeScanner.render(onScanSuccess, onScanError);
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $(".update-quantity").click(function () {
            var itemId = $(this).data("id");
            var action = $(this).data("action");

            $.ajax({
                url: "/InventoryItem/UpdateQuantity",
                type: "POST",
                data: { id: itemId, action: action },
                success: function (newQuantity) {
                    $("#quantity-" + itemId).text(newQuantity.qty);
                    $("#m2Total-" + itemId).text(newQuantity.m2Total);
                },
                error: function () {
                    alert("Error updating quantity.");
                }
            });
        });
    });
</script>
<script>
    document.getElementById("myForm").addEventListener("submit", function (e) {
        var idInput = document.getElementById("manualId").value.trim();

        if (idInput === "") {
            e.preventDefault();
            document.getElementById("errorMessage").textContent = "Name field cannot be empty!";
        }
    });
</script>
<script>
    document.getElementById("clearSessionBtn").addEventListener("click", function () {
        fetch('/InventoryItem/ClearSession', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
            .then(response => {
                if (response.ok) {
                    location.reload();
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
    });
</script>
<style>
    .update-quantity{
        margin-bottom: 0.2rem;
        width: 2rem;
    }
    td, th{
        text-align:center;
    }

    .disabled-link {
        pointer-events: none;
        color: gray;
        text-decoration: none;
    }

    div.settings {
        display: grid;
        grid-template-columns: max-content max-content;
        grid-gap: 5px;
        margin-bottom: 1rem
    }

        div.settings label {
            text-align: right;
        }

            div.settings label:after {
                content: ":";
            }
</style>