@using Inventar.ViewModels.Shared
@model IEnumerable<SaleDetailsViewModel>

<h2>@Inventar.Resources.Resource.Sales: @ViewBag.CustomerFullName</h2>
<div style="margin-bottom: 20px;">
    <h4>@Inventar.Resources.Resource.SaleTime: @ViewBag.SaleTime</h4>
</div>
<table id="DetailsTable" class="table stripe tabela" style="font-weight:500">
    <thead>
        <tr>
            <th>#</th>
            <th>Id</th>
            <th>@Inventar.Resources.Resource.ProductNumber</th>
            <th>@Inventar.Resources.Resource.Name</th>
            <th>Model</th>
            <th>@Inventar.Resources.Resource.Color</th>
            <th>@Inventar.Resources.Resource.Size</th>
            <th>m²</th>
            <th>@Inventar.Resources.Resource.M2Total</th>
            <th>@Inventar.Resources.Resource.Quantity</th>
            <th>@Inventar.Resources.Resource.Price</th>
            <th>@Inventar.Resources.Resource.TotalPrice</th>
            <th></th>
        </tr>
        <tr class="filters">
            <th><input style="width:2rem" type="text" placeholder="" disabled></th>
            <th><input style="width:5rem" type="text" placeholder="Id"></th>
            <th><input style="width:5rem" type="text" placeholder="ProductNumber"></th>
            <th><input style="width:7.5rem" type="text" placeholder="Name"></th>
            <th><input style="width:5rem" type="text" placeholder="Model"></th>
            <th><input style="width:7.5rem" type="text" placeholder="Color"></th>
            <th><input style="width:5rem" type="text" placeholder="Size"></th>
            <th><input style="width:5rem" type="text" placeholder="m²"></th>
            <th><input style="width:5rem" type="text" placeholder="m2Total"></th>
            <th><input style="width:5rem" type="text" placeholder="Quantity"></th>
            <th><input style="width:5rem" type="text" placeholder="Price"></th>
            <th><input style="width:5rem" type="text" placeholder="TotalPrice"></th>
            <th><input style="width:5rem" type="text" placeholder="" disabled></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td></td>
                <td>@item.Id</td>
                <td>@item.ProductNumber</td>
                <td>@item.Name</td>
                <td>@item.Model</td>
                <td>@item.Color</td>
                @if (item.PerM2 || (!item.PerM2 && (item.Width != null && item.Length != null)))
                {
                    <td>
                        @($"{item.Width}X{item.Length}")
                    </td>
                }
                @if (!item.PerM2 && (item.Width == null || item.Length == null))
                {
                    <td></td>
                }
                <td>@(item.PerM2 ? Math.Round((decimal)item.M2PerUnit, 2) : "")</td>
                <td>@(item.PerM2 ? Math.Round((decimal)item.M2Total, 2) : "")</td>
                <td>@item.Quantity</td>
                <td style="color:@(item.PerM2 ? "green" : "black")">@item.Price€</td>
                <td>@Math.Round((item.PerM2 ? item.Price * (decimal)item.M2Total : item.Price * item.Quantity), 2)€</td>
                <td>
                    <a href="@Url.Action("Edit", "Sales", new {id=item.Id, returnUrl = ViewBag.ReturnUrl, returnFromDetails = ViewBag.ReturnFromDetails })">@Inventar.Resources.Resource.Edit</a>
                    <a href="@Url.Action("Delete", "Sales", new {id=item.Id, returnUrl = ViewBag.ReturnUrl, returnFromDetails = ViewBag.ReturnFromDetails })">@Inventar.Resources.Resource.Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div style="margin-top: 10px; font-weight: bold;">
    <strong>@Inventar.Resources.Resource.TotalQuantity: </strong><span id="totalQuantity"></span>   |
    <strong>@Inventar.Resources.Resource.M2Total: </strong><span id="totalM2"></span>   |
    <strong>@Inventar.Resources.Resource.TotalPrice: </strong><span id="totalPrice"></span>€
</div>

<button id="downloadDetailsPDF" class="btn btn-primary" style="margin-top: 1rem;">@Inventar.Resources.Resource.PrintPDF</button>

<div>
    @if (!Model.Any())
    {
        string xx = ViewBag.ReturnFromDetails;
        var zz = xx.Split('/').Last();
        if (zz == "Sales")
        {
            <a asp-action="Index" asp-controller="Sales" class="btn btn-secondary btn-sm" style="margin-top:1rem">@Inventar.Resources.Resource.BackToList</a>
        }
        else
        {
            <a asp-action="Index" asp-controller="Buyer" class="btn btn-secondary btn-sm" style="margin-top:1rem">@Inventar.Resources.Resource.BackToList</a>
        }
    }
    else
    {
        <a href="@ViewBag.ReturnFromDetails" class="btn btn-secondary btn-sm" style="margin-top:1rem">@Inventar.Resources.Resource.BackToList</a>
    }

</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var table = $('#DetailsTable').DataTable({
                orderCellsTop: true,
                fixedHeader: true,
                order: [[1, "desc"]],
            });

            $('#DetailsTable thead tr:eq(1) th').each(function (i) {
                $('input', this).on('keyup change', function () {
                    if (table.column(i).search() !== this.value) {
                        table.column(i).search(this.value).draw();
                    }
                });
            });

            function updateTotals() {
                var data = table.rows({ search: 'applied' }).data();
                var totalQuantity = 0;
                var totalM2 = 0;
                var totalPrice = 0;

                for (var i = 0; i < data.length; i++) {
                    totalQuantity += parseInt(data[i][9]) || 0;
                    totalPrice += parseFloat(data[i][11]) || 0;
                    totalM2 += parseFloat(data[i][8]) || 0;
                }

                $('#totalQuantity').text(totalQuantity);
                $('#totalPrice').text(totalPrice.toFixed(2));
                $('#totalM2').text(totalM2.toFixed(2));

            }

            table.on('draw', function () {
                updateTotals();

                let counter = 1;
                table.rows({ search: 'applied', order: 'applied' }).every(function () {
                    var node = this.node();
                    $('td:eq(0)', node).html(counter++);
                });
            });

            updateTotals();
            table.draw();
        });
    </script>
        
    <script>
        $('#downloadDetailsPDF').on('click', function () {
            var table = $('#DetailsTable').DataTable();

            var data = [];

            table.rows({ search: 'applied' }).every(function () {
                var row = this.node();
                var rowData = [];
                $(row).find('td').each(function () {
                    rowData.push($(this).text().trim());
                });
                data.push(rowData);
            });

            // Remove last column (actions)
            var tableData = data.map(row => row.slice(0, -1));

            // Get filters as text (not inputs)
            var filters = [];
            $('#DetailsTable thead tr.filters th').each(function (i) {
                if (i < tableData[0].length) {
                    filters.push($(this).find('input').val() || "");
                }
            });

            // Totals from page
            var totalQuantity = parseInt($('#totalQuantity').text()) || 0;
            var totalM2 = parseFloat($('#totalM2').text()) || 0;
            var totalPrice = parseFloat($('#totalPrice').text()) || 0;

            // Heading text from h2 and h4
            var h2Text = $('h2').text().trim();
            var h4Text = $('h4').text().trim();

            // Column headers excluding last
            var headers = [];
            $('#DetailsTable thead tr:eq(0) th').each(function (i) {
                if (i < tableData[0].length) headers.push($(this).text().trim());
            });

            $.ajax({
                url: '@Url.Action("GenerateDetailsPDF", "Pdf")',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    HeadingLeft: h2Text,
                    HeadingRight: h4Text,
                    Data: tableData,
                    Filters: filters,
                    ColumnHeaders: headers,
                    TotalQuantity: totalQuantity,
                    TotalM2: totalM2,
                    TotalPrice: totalPrice
                }),
                xhrFields: { responseType: 'blob' },
                success: function (blob) {
                    var link = document.createElement('a');
                    link.href = window.URL.createObjectURL(blob);
                    link.download = 'Detaljne_prodaje/kupovine.pdf';
                    link.click();
                }
            });
        });

    </script>
    <style>
        #DetailsTable thead tr:first-child th {
            background-color: khaki;
        }
    </style>
}